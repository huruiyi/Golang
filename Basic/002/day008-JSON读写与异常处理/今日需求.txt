@什么是JSON{
√ 使用JSON描述一下谦哥，尽量详细地描述其特征，包含其妻儿们的信息；
}

@JSON的序列化{
√ 使用Person结构体描述谦哥并转JSON
√ 使用map[string]interface{}描述谦哥并转JSON
√ 使用map切片描述谦哥的小姨子们并转JSON
}

@JSON的反序列化{
√ 将谦哥老婆的JSON信息转换为map
√ 将谦哥老婆的JSON信息转换为结构体
√ 将谦哥小姨子们的JSON信息转换为map切片
√ 将谦哥小姨子们的JSON信息转换为结构体切片
}

@读写JSON文件{
√ 使用JSON包的编码器编码谦嫂的信息为JSON文件
√ 解码《谦嫂.json》为map
√ 解码《谦嫂.json》为结构体
√ 编码谦哥八大姨结构体切片为JSON文件
√ 解码谦哥八大姨JSON文件为结构体切片
}

@恐慌{
√ 演示几个恐慌：对空指针取值、下标越界、向空map中添加键值对
}

@异常处理语法讲解{
√ 求玩具球的体积
√ 半径如果为负数，直接panic
√ 处理恐慌
√ 半径如果不在取值范围内，温和地返回【结果-错误对】
√ 无论是panic还是返回，都使用自定义异常IllegalRadiusError的实例来操作
}

@异常处理综合案例{
√ 封装人，属性包括姓名、年龄、身高、体重、颜值、资产、性别、性取向
√ 给人封装结婚方法，参数是潜在的结婚对象：
    ①如果对方的性取向有问题，panic
    ②如果对方的颜值过低，返回错误
    ③否则返回满意程度
}
